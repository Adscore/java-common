plugins {
    id 'java-library'
    id 'cl.franciscosolis.sonatype-central-upload' version '1.0.3'
}

group = 'com.adscore'
version = '1.0.0'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
    withJavadocJar()
    withSourcesJar()
    artifacts {
        archives javadocJar, sourcesJar
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation 'org.abstractj.kalium:kalium:0.8.0'
    implementation 'com.marcospassos:phpserializer:0.8.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
    implementation 'org.msgpack:msgpack-core:0.9.8'
    implementation 'com.github.seancfoley:ipaddress:5.5.0'
}

test {
    useJUnitPlatform()
}

sonatypeCentralUpload {
    def gradlePropertiesFile = file('.gradle/gradle.properties')
    if (gradlePropertiesFile.exists()) {
        gradlePropertiesFile.withInputStream { stream ->
            def properties = new Properties()
            properties.load(stream)
            properties.each { key, value -> project.ext[key] = value }
        }
    }

    //generate in Central Portal
    username = project.findProperty("ossrhUsername")
    password = project.findProperty("ossrhToken")

    def projBuild = "build/libs/java-common-${version}.jar"
    def javaDocBuild = "build/libs/java-common-${version}-javadoc.jar"
    def sourceBuild = "build/libs/java-common-${version}-sources.jar"
    archives = files(projBuild, javaDocBuild, sourceBuild)

    pom = file("pom-default.xml")

    signingKey= file('.gradle/key_priv.txt').text
    signingKeyPassphrase = project.findProperty("signing.password")
    def pub = "gpg --armor --export ${project.findProperty("signing.keyId")}".execute().text
    publicKey = pub

    publishingType = "MANUAL"
}
